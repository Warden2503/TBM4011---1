#include <stdlib.h>
#include <stdio.h>
#include <iso646.h>
#include <stdbool.h>

typedef struct tCell{
    int payload;
    struct tCell *next;
} Cell;

Cell* agrega(Cell *base, int entrada){
    Cell* reg;
    reg=malloc(sizeof(Cell));
    if (reg == NULL) {
        printf("nulo");
        return NULL;
    }
    reg->payload=entrada;
    reg->next = NULL;
    Cell* cursor = base;
    while(cursor->next !=NULL){
        cursor=(Cell*)cursor->next;
        }
    cursor->next=reg;
    return base;
}

void imprime(Cell *raiz){
    while(raiz->next !=NULL){
        printf("->%d",raiz->next->payload);
        raiz=raiz->next;
    }
}

Cell pop(Cell *mnbvcxz){
    if(mnbvcxz->next==NULL){return *mnbvcxz;} 
    Cell *cursor=mnbvcxz;
    while(((Cell*)cursor->next)->next !=NULL){
        cursor=(Cell*)cursor->next;
    }
        free((void *)cursor->next);
        cursor->next=NULL;
        return *mnbvcxz;
}

Cell erase(Cell *celda){
    while(celda->next!=NULL)
    pop(celda);
    return *celda;

}

void buscar(Cell *mnbvcxz, int asd, int cont) {
    Cell *cursor=NULL;

    if(asd>cont || asd<=0) {
        printf("\n Nodo inválido. Vuelve a seleccionar la opción del menú.\n");
    } else {
        for(int i=0; i<asd;i++){
    }
    if (asd<=cont) {
        cursor=mnbvcxz;
        for(int i=0; i<asd;i++){
        if(cursor->next!=NULL) {
            cursor=cursor->next;
        } 
    }
        printf("\n\nEl nodo %d contiene el siguiente dato:%d\n\n",asd,cursor->payload);
        }
    }
}

Cell *borranodoespecifico(Cell *mnbvcxz, int asd, int cont) {
    Cell *cursor=NULL;

    if(asd>cont || asd<=0) {
        printf("Nodo inválido. Vuelve a seleccionar una opción de nuevo.");
    } else {
        cursor=mnbvcxz;
        for(int i=1; i<asd;i++){
            if(cursor->next!=NULL)
            
            cursor=cursor->next;
        } 
        Cell *dsa=((Cell*)cursor->next)->next;
        free((void *)cursor->next);
        cursor->next=dsa;
    }
    return mnbvcxz;
        }

Cell *editarnodo(Cell *mnbvcxz, int asd, int cont, int cambia) {
    Cell *cursor=NULL;

    if(asd>cont || asd<=0) {
        printf("error");
    } else {
        cursor=mnbvcxz;
        for(int i=0; i<asd;i++){
            if(cursor->next!=NULL)
            
            cursor=cursor->next;
        } 
        cursor->payload=cambia;
    }
    return mnbvcxz;
        }


Cell menu(Cell *base) {
        int menu1=1;
        int contador=0;
    while (menu1==1) {
        printf("\nElije una opción:\n 0 - Agrega nodo.\n 1 - Borra último nodo.\n 2 - Imprime lista.\n 3 - Buscar Nodo.\n 4 - Borra un nodo especifico.\n 5 - Editar nodo\n 6 - Salir\n");
        int q;
        int num;
        scanf("%d", &q);
        if (q==1) { //BORRA ÚLTIMO NODO.
            pop(base);
            contador=contador-1;
        }    
        else if (q==0) { // AGREGA UN NODO.
            printf("Escribe un número.\n");
            scanf("%d", &num);
            agrega(base, num);
            contador=contador+1;        
        }
        else if (q==2) { // IMPRIME LA LISTA.
            printf("\nEn este momento existen %d nodos.\n", contador); 
            printf("\nAqui esta la lista:\n");
            imprime(base);
        }
        else if(q==6) { // SALIR.
            erase(base);
            printf("Ádiós C:");
            menu1=2;
        }
        else if(q==3){ //BUSCA NODO
            int numero;
            printf("\n¿Qué nodo deseas buscar?\n");
            printf("\nEn este momento existen %d nodos.\n", contador); 
            scanf("%d",&numero);
            buscar(base,numero, contador);
        }
        else if(q==4){ // BORRA NODO
            int numero;
            printf("\n¿Qué nodo deseas borrar?\n");
            printf("\n\nEn este momento existen %d nodos\n\n", contador);
            scanf("%d",&numero);
            borranodoespecifico(base,numero,contador);
            contador=contador-1;
            printf("\nEl nodo %d ha sido borrado.\n", numero);
        }
        else if(q==5) { //EDITA NODO.
            int numero;
            int cambia;
            printf("\n¿Qué nodo deseas editar?\n");
            scanf("%d",&numero);
            buscar(base,numero, contador);
            printf("\n¿A qué número lo quieres cambiar?");
            scanf("%d", &cambia);
            editarnodo(base,numero,contador,cambia);
            printf("El nodo ha sido cambiado con éxito");
        }
        else {
                printf("\nEscribe un número valido plox.\n");
                }
            } 
    return *base;
        }

int main(int argc, char* argv []) {
    Cell *root;
    root = (Cell *)malloc(sizeof(Cell));
    root->payload = -1;
    root->next = NULL;
    menu(root);
    return 0;
    }
    
